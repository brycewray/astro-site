---
import { format } from "date-fns";
// import '@styles/Twitter.scss';

/*
  =======
  Based on...
  - https://github.com/hugomd/blog/blob/6ad96b24117255c2a9912c566ffd081bd9bbd6f1/layouts/shortcodes/statictweet.html
  - https://hugo.md/post/update-rendering-static-tweets/
  - https://github.com/KyleMit/eleventy-plugin-embed-tweet
  - https://github.com/rebelchris/astro-static-tweet/blob/master/StaticTweet.astro
  =======
*/

const { TweetID } = Astro.props;

const BearerToken = import.meta.env.PUBLIC_BEARER_TOKEN;
const jsonURL1 = "https://api.twitter.com/2/tweets?ids=";
const jsonURL2 = "&expansions=author_id,attachments.media_keys&tweet.fields=created_at,text,attachments,entities,source&user.fields=name,username,profile_image_url&media.fields=preview_image_url,type,url,alt_text";

const response = await fetch(jsonURL1 + TweetID + jsonURL2, {
  method: "get",
  headers: {
    "Authorization": `Bearer ${BearerToken}`
  }
});
const Json = await response.json();
const JsonData = Json.data[0];
const JsonIncludes = Json.includes;

let text, created_at, profile_image_url, name, username = ''

name = JsonIncludes.users[0].name;
username = JsonIncludes.users[0].username;
profile_image_url = JsonIncludes.users[0].profile_image_url;
created_at = JsonData.created_at;

text = JsonData.text;

if (JsonData.entities.urls) {
  JsonData.entities.urls.forEach((url) => {
    if (!url.images) {
      if (!url.unwound_url) {
        if (url.display_url.includes ("buff.ly")) {
          text = text.replace(
            url.url,
            `<a href=${url.url} target="_blank" rel="noreferrer noopener">${url.display_url}</a>`
          );
        } else {
          text = text.replace(
            url.url,
            ``
          );
        }
      } else {
        text = text.replace(
          url.url,
          `<a href=${url.url} target="_blank" rel="noreferrer noopener">${url.display_url}</a>`
        );
      }
    } else {
      text = text.replace(
        url.url,
        `<a href=${url.url} target="_blank" rel="noreferrer noopener">${url.display_url}</a>`
      );
    }
  })
}

if (JsonData.entities.mentions) {
  JsonData.entities.mentions.forEach((mention) => {
    text = text.replace(
      `@${mention.username}`,
      `<a target="_blank" rel="noreferrer noopener" href="https://twitter.com/${mention.username}">@${mention.username}</a>`
    );
  })
}

if (JsonData.entities.hashtags) {
  JsonData.entities.hashtags.forEach((hashtag) => {
    text = text.replace(
      `#${hashtag.tag}`,
      `<a target="_blank" rel="noreferrer noopener" href="https://twitter.com/hashtag/${hashtag.tag}?src=hash&ref_src=twsrc">#${hashtag.tag}</a>`
    );
  })
}

text = text.replace(/(?:\r\n|\r|\n)/g, '<br/>');

let imageItems = '';

if (JsonIncludes.media) {
  JsonIncludes.media.forEach((item) => {
    if (item.url) {
      imageItems = imageItems + `<img class="tweet-img" src=${item.url} alt="" /><br />`;
    }
  })
}

---
<style lang="scss" define:vars={{aspect}}>

  @use '../styles/variables' as var; // SCSS partial

  // based partly on https://github.com/astro-community/astro-embed/tree/main/packages/astro-embed-twitter

  $tc-corner-radius: 1em;
  $tc-padding: 1em;

  .tweet-card {
    font-family: var.$sans-serif;
    margin: 1.5rem auto;
    padding: 1rem;
    border: 2px solid var.$grey-1;
    border-radius: 12px;
    background: var.$white;
    width: 100%;
    @media screen and (min-width: var.$bkpt_ml) {
      width: 80%;
    }
    @media screen and (min-width: var.$bkpt_lg) {
      width: 85%;
    }
    // @media screen and (min-width: var.$bkpt_2xl) {
    //   width: 85%;
    // }
    @media screen and (min-width: var.$bkpt_3xl) {
      max-width: 80ch;
    }
    @media screen and (prefers-color-scheme: dark) {
      background: transparent;
    }
    a, a:hover {
      border: none !important;
      overflow-wrap: break-word;
      word-wrap: break-word;
      word-break: break-word;
      /*
      See:
      - https://css-tricks.com/snippets/css/prevent-long-urls-from-breaking-out-of-container/
      - https://css-tricks.com/where-lines-break-is-complicated-heres-all-the-related-css-and-html/
      - https://css-tricks.com/better-line-breaks-for-long-urls/
      */
      @media screen and (prefers-color-scheme: dark) {
        color: var.$blueLight;
      }
    }
    @media screen and (prefers-color-scheme: dark) {
      border: 2px solid var.$grey-2;
      color: var.$white;
    }
  }

  .tweet-body {
    font-size: var.$stdsize;
    line-height: 1.5em;
    text-align: left !important;
    @media screen and (min-width: var.$bkpt_lg) {
      font-size: var.$minimalbig;
    }
  }

  // ==== rounded image "attachment"
  // Eleventy version
  .tweet-images {
    img {
      border-radius: 12px;
    }
  }
  // Hugo version
  .tweet-media-img {
    // border-radius: 12px;
    width: 100%;
    height: auto;
    aspect-ratio: 1;
    object-fit: cover;
  }
  // ==== END, rounded image "attachment"


  .tweet-header {
    display: flex;
    .tweet-profile {
      margin-right: 0.5em;
      flex-shrink: 0;
      img {
        border-radius: 9999px;
      }
    }
    .tweet-author {
      display: flex;
      flex-direction: column;
      flex-grow: 1;
      &-name {
        font-weight: bold;
        color: var.$black;
        @media screen and (prefers-color-scheme: dark) {
          color: var.$white;
        }
        line-height: 1.375;
      }
      &-handle {
        color: var.$grey-1;
        @media screen and (prefers-color-scheme: dark) {
          color: var.$grey-2-dark-mode;
        }
        font-size: var.$pokey;
        line-height: 1;
      }
      .tweet-bird {
        margin-left: 1.25rem;
      }
    }
  }

  .tweet-footer {
    margin-top: 1rem;
    display: flex;
    align-items: center;
    color: var.$grey-1;
    font-size: var.$pokey;
    @media screen and (prefers-color-scheme: dark) {
      color: var.$grey-2-dark-mode;
    }
    .tweet-like-icon, .tweet-like-count {
      display: none;
    }
    a {
      color: var.$grey-1;
      @media screen and (prefers-color-scheme: dark) {
        color: var.$grey-2-dark-mode;
      }
    }
    /* === needed in Eleventy but not in Hugo
    .tweet-date:after {
      content: " (UTC)";
      font-size: var.$legal;
    }
    */
  }

  [class^='tweet-img-grid'],
  .tweet-video-wrapper,
  .tweet-media-video {
    border-radius: $tc-corner-radius;
    overflow: hidden;
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    grid-gap: 2px;
  }

  .tweet-video-wrapper {
    display: block;
  }

  .tweet-media-video {
    // text-align: center;
    width: 100%;
    height: auto;
  }

  .tweet-img-grid-3 {
    grid-template-columns: repeat(2, 1fr);
  }

  .tweet-img-grid-3 .tweet-media-img {
    aspect-ratio: 1.8;
  }

  .tweet-img-grid-3 :nth-child(1) {
    grid-row: 1 / span 2;
  }

  .tweet-img-grid-3 :nth-child(1) .tweet-media-img {
    aspect-ratio: 0.9;
  }

  .tweet-img-grid-2,
  .tweet-img-grid-4 {
    grid-template-columns: repeat(2, 1fr);
  }
  .tweet-media-video-aspect video{
    aspect-ratio: var(--aspect);
  }
</style>

<blockquote class="tweet-card">
  <div class="tweet-header">
    <a class="tweet-profile" href=`https://twitter.com/${username}` target="_blank" rel="noreferrer noopener">
      <img src={profile_image_url} alt=`Twitter avatar for ${username}` />
    </a>
    <div class="tweet-author">
      <a class="tweet-author-name" href=`https://twitter.com/${username}` target="_blank" rel="noreferrer noopener">{name}</a>
      <a class="tweet-author-handle" href=`https://twitter.com/${username}` target="_blank" rel="noreferrer noopener">@{username}</a>
    </div>
  </div>
  <p class="tweet-body" set:html={text} />
  <span set:html={imageItems} />
  <div class="tweet-footer">
    <a href=`https://twitter.com/${username}/status/${TweetID}` class="tweet-date" target="_blank" rel="noreferrer noopener">{format(new Date(created_at), "MMMM d, yyyy â€¢ h:mm aa")}</a>&nbsp;<span class="legal">(UTC)</span>
  </div>
</blockquote>
