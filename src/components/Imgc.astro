---
import axios from "axios";

const respSizes = [ 300, 450, 600, 750, 900, 1050, 1200, 1350, 1500 ];
let cloudiBase = 'https://res.cloudinary.com/brycewray-com/image/upload/';
let LQIPholder = 'f_jpg,q_1,w_20/'; // note ending slash
let xFmPart1 = 'f_auto,q_auto:eco,w_';
let xFmPart2 = ',x_0,z_1/'; // note ending slash

const { url, alt, width, height, tmpl } = Astro.props;

const Srcset =
  respSizes.map(size => {
    if (size <= width) {
      return `${cloudiBase + xFmPart1 + size + xFmPart2 + url} ${size}w`;
    }
  }).join(', ');

let divClass, imgClass, nscClass, dataSzes, lazyYorN = ''

switch(tmpl) {
  /* === 'index'case used with home page when it had a hero image (pre-Jan. 2021)
  case 'index':
    divClass = `h-full`;
    imgClass = `nScrHidden object-cover object-center h-full w-full containedImage animate-fade`;
    nscClass = `imgCover hero`;
    dataSzes = `100vw`;
    lazyYorN = `eager`;
    break;
  */
  case 'posts':
    divClass = `h-full`;
    imgClass = `nScrHidden imgCover hero animate-fade`;
    nscClass = `imgCover`;
    dataSzes = `(min-width: 1024px) 100vw, 50vw`;
    lazyYorN = `eager`;
    break
  default:
    divClass = `relative`;
    imgClass = `w-full h-auto animate-fade`;
    nscClass = `w-full h-auto`;
    dataSzes = `(min-width: 1024px) 100vw, 50vw`;
    lazyYorN = `lazy`;
}

/*
================================================================
Fetch the LQIP from Cloudinary and convert it to a Base64 string
================================================================
With immense thanks to "Aankhen" on the Eleventy Discord, 2022-01-22:
- https://discord.com/channels/741017160297611315/934524410591838249/
Also, https://stackoverflow.com/questions/41846669/download-an-image-using-axios-and-convert-it-to-base64
*/

async function getBase64(urlFor64) {
  const response = await axios
    .get(urlFor64, {
      responseType: 'arraybuffer'
    })
  return Buffer.from(response.data, 'binary').toString('base64');
}

let LQIP_b64 = await getBase64(cloudiBase + LQIPholder + url);
let imgBkgd = `url(data:image/jpeg;base64,${LQIP_b64})`;

/*
================================================================
End, LQIP-to-Base64
================================================================
*/
---

<style lang="scss" define:vars={{ imgBkgd }}>
  @use '../styles/variables' as var; // SCSS partial

  .bkgdHandler {
    background-color: var.$default-color;
    background-image: var(--imgBkgd);
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
  }
  img.containedImage {
    display: block;
    width: 100%;
    height: auto;
    padding: 0;
    margin: 0 auto;
  }
  @keyframes fadeIn {
    0% {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  .animate-fade {
    animation: fadeIn 750ms ease-in-out;
  }

</style>

<div class={divClass + " bkgdHandler" }>
  <noscript>
    <img class={nscClass} src={cloudiBase + xFmPart1 + "600" + xFmPart2 + url} alt={alt} />
  </noscript>
  <img class={imgClass} src={cloudiBase + xFmPart1 + "600" + xFmPart2 + url} srcset={Srcset} alt={alt}  sizes={dataSzes} loading={lazyYorN} />
</div>
